{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/LENOVO/OneDrive/Desktop/notdeploy/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/LENOVO/OneDrive/Desktop/notdeploy/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/LENOVO/OneDrive/Desktop/notdeploy/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import NoteContext from\"./noteContext\";import{jsx as _jsx}from\"react/jsx-runtime\";var NoteState=function NoteState(props){var notesInitial=[];var _useState=useState(notesInitial),_useState2=_slicedToArray(_useState,2),notes=_useState2[0],setNotes=_useState2[1];var _useState3=useState({message:\"\",type:\"\"}),_useState4=_slicedToArray(_useState3,2),alert=_useState4[0],setAlert=_useState4[1];var fetchNotes=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response,json;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"https://writenote.herokuapp.com/notes/fetchnotes\",{method:'GET',headers:{\"auth-token\":localStorage.getItem('token'),\"Content-Type\":\"application/json\"}});case 2:response=_context.sent;_context.next=5;return response.json();case 5:json=_context.sent;// console.log(json);\nsetNotes(json);case 7:case\"end\":return _context.stop();}}},_callee);}));return function fetchNotes(){return _ref.apply(this,arguments);};}();// Add a note\n// TODO : API call\nvar addNote=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(title,description,tag){var response,note;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(\"https://writenote.herokuapp.com/notes/addnote\",{method:'POST',headers:{\"auth-token\":localStorage.getItem('token'),\"Content-Type\":\"application/json\"},body:JSON.stringify({title:title,description:description,tag:tag})});case 2:response=_context2.sent;_context2.next=5;return response.json();case 5:note=_context2.sent;setNotes(notes.concat(note));showAlert(\"Note Added succesfully\",'success');case 8:case\"end\":return _context2.stop();}}},_callee2);}));return function addNote(_x,_x2,_x3){return _ref2.apply(this,arguments);};}();// Delete a note\nvar deleteNote=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(id){var response,newNotes;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return fetch(\"https://writenote.herokuapp.com/notes/deletenote/\".concat(id),{method:'DELETE',headers:{\"auth-token\":localStorage.getItem('token'),\"Content-Type\":\"application/json\"}});case 2:response=_context3.sent;_context3.next=5;return response.json();case 5:// console.log(json);\n// console.log(\"deleting a note with id \"+ id);\n// Logic to delete a note in front-end\nnewNotes=notes.filter(function(note){return note._id!==id;});setNotes(newNotes);showAlert(\"Note Deleted succesfully\",'success');case 8:case\"end\":return _context3.stop();}}},_callee3);}));return function deleteNote(_x4){return _ref3.apply(this,arguments);};}();// Edit a note\nvar editNote=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(id,title,description,tag){var response,json,newNotes,index,element;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return fetch(\"https://writenote.herokuapp.com/notes/updatenote/\".concat(id),{method:'PUT',headers:{\"auth-token\":localStorage.getItem('token'),\"Content-Type\":\"application/json\"},body:JSON.stringify({title:title,description:description,tag:tag})});case 2:response=_context4.sent;_context4.next=5;return response.json();case 5:json=_context4.sent;console.log(json);// Login to edit in client i.e, in front-end\nnewNotes=JSON.parse(JSON.stringify(notes));index=0;case 9:if(!(index<newNotes.length)){_context4.next=19;break;}element=newNotes[index];if(!(element._id===id)){_context4.next=16;break;}newNotes[index].title=title;newNotes[index].description=description;newNotes[index].tag=tag;return _context4.abrupt(\"break\",19);case 16:index++;_context4.next=9;break;case 19:setNotes(newNotes);showAlert(\"Note Updated succesfully\",'success');case 21:case\"end\":return _context4.stop();}}},_callee4);}));return function editNote(_x5,_x6,_x7,_x8){return _ref4.apply(this,arguments);};}();// Alert Function\nvar showAlert=function showAlert(message,type){setAlert({message:message,type:type});setTimeout(function(){setAlert(null);},2000);};return/*#__PURE__*/_jsx(NoteContext.Provider,{value:{notes:notes,setNotes:setNotes,addNote:addNote,deleteNote:deleteNote,editNote:editNote,fetchNotes:fetchNotes,showAlert:showAlert,alert:alert},children:props.children});};export default NoteState;","map":{"version":3,"names":["React","useState","NoteContext","NoteState","props","notesInitial","notes","setNotes","message","type","alert","setAlert","fetchNotes","fetch","method","headers","localStorage","getItem","response","json","addNote","title","description","tag","body","JSON","stringify","note","concat","showAlert","deleteNote","id","newNotes","filter","_id","editNote","console","log","parse","index","length","element","setTimeout","children"],"sources":["C:/Users/LENOVO/OneDrive/Desktop/notdeploy/frontend/src/context/notes/NoteState.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport NoteContext from \"./noteContext\";\r\n\r\nconst NoteState = (props) => {\r\n  const notesInitial = [];\r\n  const [notes, setNotes] = useState(notesInitial);\r\n  const [alert, setAlert] = useState({message:\"\", type:\"\"});\r\n  \r\n  const fetchNotes = async()=>{\r\n    const response = await fetch(`https://writenote.herokuapp.com/notes/fetchnotes`, {\r\n      method:'GET',\r\n      headers: {\r\n        \"auth-token\": localStorage.getItem('token'),\r\n        \"Content-Type\": \"application/json\"\r\n      } \r\n\r\n    });\r\n    const json = await response.json();\r\n    // console.log(json);\r\n    setNotes(json);\r\n  }\r\n\r\n  // Add a note\r\n  // TODO : API call\r\n  const addNote = async(title, description, tag) => {\r\n    const response = await fetch(`https://writenote.herokuapp.com/notes/addnote`, {\r\n      method:'POST',\r\n      headers: {\r\n        \"auth-token\": localStorage.getItem('token'),\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({title, description, tag})\r\n    })\r\n    const note = await response.json();\r\n   \r\n    setNotes(notes.concat(note));\r\n    showAlert(\"Note Added succesfully\", 'success')\r\n  };\r\n\r\n  // Delete a note\r\n  const deleteNote = async(id) => {\r\n    const response = await fetch(`https://writenote.herokuapp.com/notes/deletenote/${id}`,{\r\n      method:'DELETE',\r\n      headers: {\r\n        \"auth-token\": localStorage.getItem('token'),\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n    })\r\n    await response.json();\r\n    // console.log(json);\r\n\r\n    // console.log(\"deleting a note with id \"+ id);\r\n\r\n    // Logic to delete a note in front-end\r\n    const newNotes = notes.filter((note) => {\r\n      return note._id !== id;\r\n    });\r\n    setNotes(newNotes);\r\n    showAlert(\"Note Deleted succesfully\", 'success')\r\n    \r\n  };\r\n\r\n  // Edit a note\r\n  const editNote = async (id, title, description, tag) => {\r\n    const response = await fetch(`https://writenote.herokuapp.com/notes/updatenote/${id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        \"auth-token\": localStorage.getItem('token'),\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({title, description, tag})\r\n    });\r\n    const json = await response.json();\r\n    console.log(json);\r\n\r\n  // Login to edit in client i.e, in front-end\r\n  let newNotes = JSON.parse(JSON.stringify(notes));\r\n  for(let index = 0; index<newNotes.length;index++){\r\n    const element = newNotes[index];\r\n    if(element._id === id){\r\n      newNotes[index].title = title;\r\n      newNotes[index].description = description;\r\n      newNotes[index].tag = tag;\r\n      break;\r\n    }\r\n    \r\n  }\r\n  setNotes(newNotes);\r\n  showAlert(\"Note Updated succesfully\", 'success')\r\n  \r\n};\r\n\r\n\r\n// Alert Function\r\nconst showAlert = (message, type)=>{\r\n  setAlert({\r\n    message: message,\r\n    type: type\r\n  })\r\n  setTimeout(() => {\r\n    setAlert(null);\r\n  }, 2000);\r\n}\r\n\r\n  return (\r\n    <NoteContext.Provider\r\n      value={{ notes, setNotes, addNote, deleteNote, editNote, fetchNotes, showAlert, alert }}\r\n    >\r\n      {props.children}\r\n    </NoteContext.Provider>\r\n  );\r\n};\r\n\r\nexport default NoteState;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}